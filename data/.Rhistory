setwd("D:/Data Science/git projects/freemium-ab-testing/data")
FTrials <- read.csv('control_trial_results_dummy.csv')
FTrials <- FTrials[c(2:11)]
View(FTrials)
str(FTrials)
FTrials$trial <- factor(FTrials$trial)
FTrials$date <- factor(FTrials$date)
FTrialsNum$source <- factor(FTrials$source)
FTrialsNum$device <- factor(FTrials$device)
FTrialsNum$payee <- factor(FTrials$payee)
FTrialsNum$browser <- factor(FTrials$browser)
FTrialsNum$sex <- factor(FTrials$sex)
FTrialsNum$industry_code <- factor(FTrials$industry_code)
str(FTrials)
FTrials$source <- factor(FTrials$source)
FTrials$device <- factor(FTrials$device)
FTrials$payee <- factor(FTrials$payee)
FTrials$browser <- factor(FTrials$browser)
FTrials$sex <- factor(FTrials$sex)
FTrials$industry_code <- factor(FTrials$industry_code)
str(FTrials)
FTrials$industry_code <- factor(FTrials$industry_code, level = levels(as.factor(FTrials$industry_code)))
View(FTrials)
library('caTools')
library('caTools')
set.seed(123)
split <- sample.split(FTrials$trial, SplitRatio = 0.80)
training_set <- subset(FTrials, split == TRUE)
test_set <- subset(FTrials, split == FALSE)
library(e1071)
# Build first Model - Decition Tree
library('rpart')
DTmodel <- rpart(formula = trial ~ .,
data = training_set,
method = "class")
#control = rpart.control(maxdepth = 10))
DTmodel
# Decision Tree
DTpred = predict(DTmodel, type = 'class', newdata = test_set[-10])
DTcm = table(test_set[, 10], DTpred)
DTcm
model_accuracy <- function(cm, mode='A'){
n = sum(cm) # number of instances
nc = nrow(cm) # number of classes
diag = diag(cm) # number of correctly classified instances per class
rowsums = apply(cm, 1, sum) # number of instances per class
colsums = apply(cm, 2, sum) # number of predictions per class
p = rowsums / n # distribution of instances over the actual classes
q = colsums / n # distribution of instances over the predicted classes
########################## Calculating the Accuracy  ##################################################
if(mode=='A')
result = sum(diag(cm))/sum(cm) # 95%
else {
Precision = diag/colsums
Recall = diag / rowsums
result = 2 * Precision * Recall / (Precision + Recall)
}
return(result)
}
# Decision Tree
Accuracy = model_accuracy(DTcm, 'A')
F1_score = model_accuracy(DTcm, 'F')
library('rpart.plot')
library('rpart.plot')
rpart.plot(DTmodel, box.palette = "RdBu", shadow.col = "gray", nn=TRUE)
rpart.plot(DTmodel, box.palette = "RdBu", shadow.col = "gray", nn=TRUE)
